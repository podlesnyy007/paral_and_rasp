/*
Стандартными средствами OpenMP выполнить замер начального времени (в секундах) и конечного времени, а также определить точность таймера OpenMP. 
*/

#include <iostream>
#include <omp.h> // Подключаем библиотеку OpenMP для работы с таймером
using namespace std;

int main()
{
    setlocale(LC_ALL, "Rus");

    // Получаем начальное время с помощью функции omp_get_wtime()
    // Эта функция возвращает время в секундах с некоторой произвольной точки в прошлом
    double start_time = omp_get_wtime();

    // Код, время выполнения которого нужно измерить
    // Вызываем функцию получения времени снова, чтобы продемонстрировать работу таймера
    double end_time = omp_get_wtime();

    // Вычисляем разницу между конечным и начальным временем
    // Это даст нам время выполнения кода между двумя вызовами omp_get_wtime()
    double elapsed_time = end_time - start_time;

    // Получаем точность таймера OpenMP с помощью функции omp_get_wtick()
    // Эта функция возвращает минимальный интервал времени (в секундах), который может быть измерен таймером
    double timer_precision = omp_get_wtick();

    cout << "Время выполнения: " << elapsed_time << " секунд" << endl;
    cout << "Точность таймера: " << timer_precision << " секунд" << endl;

    return 0;
}

/*
Время выполнения: 1.00001e-07 секунд
Точность таймера: 1e-07 секунд
*/

/*
omp_get_wtime() - Эта функция возвращает текущее время в секундах с некоторой фиксированной точки в прошлом (обычно это начало работы системы). 
Она используется для измерения временных интервалов.

omp_get_wtick() - Эта функция возвращает разрешение таймера, то есть минимальный интервал времени, который может быть измерен системным таймером. 
Это значение показывает, насколько точно работает таймер.
*/
