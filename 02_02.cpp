/*
Проиллюстрировать возможность директивы single, осуществив
из параллельной области печать сообщения лишь одним потоком (не обязательно главным)
*/

#include <iostream>
#include <stdio.h>
#include <omp.h> // Подключаем библиотеку OpenMP

int main(int argc, char* argv[])
{
    setlocale(LC_ALL, "Rus");

    // Создаем параллельную область с 3 потоками
#pragma omp parallel num_threads(3) 
    {
        // Каждый поток выполняет этот блок кода
        printf("Печать сообщения 1 (поток %d)\n", omp_get_thread_num());

        // Директива single: только один поток выполняет этот блок кода
#pragma omp single
        {
            // Выводим сообщение, которое будет выполнено лишь одним потоком
            printf("Один поток (поток %d)\n", omp_get_thread_num());
        }

        // После завершения блока single все потоки продолжают выполнение
        printf("Печать сообщения 2 (поток %d)\n", omp_get_thread_num());
    }

    return 0;
}

/*
Печать сообщения 1 (поток 0)
Печать сообщения 1 (поток 1)
Печать сообщения 1 (поток 2)
Один поток (поток 1)
Печать сообщения 2 (поток 1)
Печать сообщения 2 (поток 0)
Печать сообщения 2 (поток 2)
*/

/*
- Первое сообщение ("Печать сообщения 1") выводится всеми потоками (3 потока).
- Сообщение "Один поток" выводится только одним потоком (это поток 1, но это может быть любой другой поток).
- Последнее сообщение ("Печать сообщения 2") снова выводится всеми потоками.
*/
