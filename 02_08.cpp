/*
Написать программу, иллюстрирующую тот факт, что
1) опция firstprivate позволяет инициализировать локальные для потоков
переменные в параллельной области значением одноименной переменной, 
созданной в последовательной области до входа в параллельную; 
2) значение одноименной переменной, созданной в последовательной области, 
не зависит от значений локальных переменных в параллельной области 
и сохраняется при выходе из параллельной области.
*/

#include <stdio.h>
#include <omp.h> // Подключаем библиотеку OpenMP
#include <iostream>

int main(int argc, char* argv[])
{
    setlocale(LC_ALL, "Rus");

    int n = 1;

    // Выводим значение переменной n в последовательной области до входа в параллельную область
    printf("Значение n в начале (последовательная область): %d\n", n);

    // Создаем параллельную область с 4 потоками
#pragma omp parallel num_threads(4) firstprivate(n)
    {
        // Каждый поток получает свою локальную копию переменной n,
        // инициализированную значением переменной n из последовательной области
        printf("Значение n в потоке %d (на входе): %d\n", omp_get_thread_num(), n);

        // Присваиваем локальной переменной n номер текущего потока
        n = omp_get_thread_num();

        // Выводим значение локальной переменной n после присвоения
        printf("Значение n в потоке %d (на выходе): %d\n", omp_get_thread_num(), n);
    }

    // Выводим значение переменной n в последовательной области после выхода из параллельной области
    // Значение переменной n остается неизменным, так как оно не зависит от локальных копий в потоках
    printf("Значение n в конце (последовательная область): %d\n", n);

    return 0;
}

/*
Значение n в начале (последовательная область): 1
Значение n в потоке 0 (на входе): 1
Значение n в потоке 0 (на выходе): 0
Значение n в потоке 1 (на входе): 1
Значение n в потоке 1 (на выходе): 1
Значение n в потоке 2 (на входе): 1
Значение n в потоке 2 (на выходе): 2
Значение n в потоке 3 (на входе): 1
Значение n в потоке 3 (на выходе): 3
Значение n в конце (последовательная область): 1
*/
