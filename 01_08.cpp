/*
Разрешить вложенные параллельные области и по возможности во вложенной параллельной области распечатать номер
потока вместе с номером породившего его потока. Выйти из вложенной параллельной секции в последовательную секцию, 
запретить вложенные параллельные секции. Далее попытаться снова во вложенной параллельной области распечатать 
номер потока вместе с номером породившего его потока.
*/

#include <stdio.h>
#include <omp.h>
#include <iostream>

int main(int argc, char* argv[])
{
    setlocale(LC_ALL, "Rus");

    // Переменная для хранения номера потока
    int n; 

    // Отключаем динамическое изменение числа потоков
    omp_set_dynamic(0);

    // Устанавливаем фиксированное число потоков (3 потока)
    omp_set_num_threads(3);

    // Разрешаем вложенные параллельные области
    omp_set_nested(1);

    // Первая параллельная область
#pragma omp parallel private(n) 
    {
        n = omp_get_thread_num(); // Получаем номер текущего потока

        // Вложенная параллельная область
#pragma omp parallel 
        {
            // Выводим номер родительского потока и номер текущего потока
            printf("Часть 1: Родительский поток %d - Потомок %d\n",
                n, omp_get_thread_num());
        }
    }

    // Запрещаем вложенные параллельные области
    omp_set_nested(0);

    // Вторая параллельная область
#pragma omp parallel private(n) 
    {
        n = omp_get_thread_num(); // Получаем номер текущего потока

        // Вложенная параллельная область (не будет выполняться из-за omp_set_nested(0))
#pragma omp parallel 
        {
            // Этот код не выполнится, так как вложенные параллельные области запрещены
            printf("Часть 2: Родительский поток %d - Потомок %d\n",
                n, omp_get_thread_num());
        }
    }

    return 0;
}

/*
omp_set_dynamic(0) - Отключает динамическое изменение числа потоков. Это гарантирует, что число потоков будет фиксированным (в данном случае 3).

omp_set_nested(1) - Разрешает использование вложенных параллельных областей. Это позволяет создавать новые потоки внутри уже существующих параллельных 
областей.
*/
